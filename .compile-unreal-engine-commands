#!/bin/bash

# Get the project name from the current directory
project="${PWD##*/}"

if [ ! -f .vscode/compileCommands_${project}.json ]; then
    echo "CompileCommands file not found!"
    exit 1
fi

# Read the compile commands file
compile_commands=$(jq -r '.[] | .file' ".vscode/compileCommands_${project}.json")
total_lines=$(jq -r '.[] | .file' ".vscode/compileCommands_${project}.json" | wc -l)
arguments1=$(jq -r '.[] | .arguments[1]' .vscode/compileCommands_${project}.json | uniq)

# Create an empty array to hold modified JSON objects
# COUNTER=0

# echo $total_lines
echo "[" >> compile_commands.tmp
# Loop through each compile command
for file in $compile_commands; do
    COUNTER=$((COUNTER + 1))
    # Modify the arguments for each file
    arguments="clang++ -std=c++20 -ferror-limit=0 $file $arguments1"

    # Construct the modified JSON object
    object="{ \"file\": \"$file\", \"arguments\": [\"$arguments\"],"
    object="${object}\"directory\": \"/home/chm/Unreal_Engine/Engine/Source\"}"

    # Append a comma unless it's the last object
    # if [ $COUNTER -lt $total_lines ]; then
    #     object="$object,"
    # fi

    # Append the modified object to a temporary file
    echo "$object," >> compile_commands.tmp
done

echo "]" >> compile_commands.tmp

jq . compile_commands.tmp > compile_commands.json
echo "compile_commands.json successfully modified!"
